#########################################################################
# File Name: autogenMenu_h.sh
# Author: CaoDan
# mail: caodan2519@gmail.com
# Created Time: 2014年10月01日 星期三 16时37分20秒
#########################################################################
#!/bin/sh

if [ $# -ne 2 ]; then
	echo "Usage: $0 "configuration_file" outputfile"
	exit 1
fi

inputfile=$1
outputfile=$2

if [ -e $inputfile ];then
	echo "your menu configuration file is $inputfile"
else
	echo "configuration file not exsist"
	exit 1
fi

echo "outputfile is $outputfile"

array_menu_name=()
array_have_submenu=()
array_have_checkbox=()
array_have_value_string=()

write_head()
{
	local tmpStr=

	tmpStr=`basename ${outputfile}`
	tmpStr=`expr "$tmpStr" : '\(.*\).h'`
	TMPSTR=`echo $tmpStr | tr '[a-z]' '[A-Z]'`
	echo "TMPSTR is $TMPSTR"

cat > $outputfile << EOF

/*************************************************************************
 > File Name: ${tmpStr}.h
 > Description:
 > Description:
 >	Generated by script
 ************************************************************************/

#ifndef __${TMPSTR}_H__
#define __${TMPSTR}_H__

#include <minigui/common.h>
#include <minigui/minigui.h>
#include <minigui/gdi.h>
#include <minigui/window.h>
#include <minigui/control.h>

#include "windows.h"
#include "cdr_widgets.h"
#include "keyEvent.h"
#include "cdr_message.h"
#include "StorageManager.h"
#include "ResourceManager.h"

EOF
}

write_tail()
{
	echo "" >> $outputfile
	echo "#endif" >> $outputfile
	echo "" >> $outputfile
}

generate_menuIndex()
{
	echo "" >> $outputfile
	
	echo -e "enum menuIndex {" >> $outputfile

	i=0
	while [ $i -lt ${#array_menu_name[@]} ]
	do
		if [ $i -ne  $((${#array_menu_name[@]} - 1)) ]; then
			echo -e "\tMENU_INDEX_${array_menu_name[$i]}," >> $outputfile
		else
			echo -e "\tMENU_INDEX_${array_menu_name[$i]}" >> $outputfile
		fi
		let i++
	done


	echo "};"	>> $outputfile
}

generate_menuResourceID()
{
	echo "" >> $outputfile

	echo "static enum ResourceID menuResourceID[] = {" >> $outputfile
	i=0
	while [ $i -lt ${#array_menu_name[@]} ]
	do
		if [ $i -ne  $((${#array_menu_name[@]} - 1)) ]; then
			echo -e "\tID_MENU_LIST_${array_menu_name[$i]}," >> $outputfile
		else
			echo -e "\tID_MENU_LIST_${array_menu_name[$i]}" >> $outputfile
		fi
		let i++
	done

	echo "};" >> $outputfile
}

generate_haveCheckBox()
{
	echo "" >> $outputfile

	echo "static unsigned int haveCheckBox[] = {" >> $outputfile

	i=0
	while [ $i -lt ${#array_have_checkbox[@]} ]
	do
		if [ $i -ne  $((${#array_have_checkbox[@]} - 1)) ]; then
			if [ ${array_have_checkbox[$i]} -eq 1 ]; then
				echo -e "\t${array_have_checkbox[$i]}, \t/*${array_menu_name[$i]} \t\t have check box */" >> $outputfile
			else
				echo -e "\t${array_have_checkbox[$i]}, \t/*${array_menu_name[$i]} \t\t not have check box */" >> $outputfile
			fi
		else
			if [ ${array_have_checkbox[$i]} -eq 1 ]; then
				echo -e "\t${array_have_checkbox[$i]} \t/*${array_menu_name[$i]} \t\t have check box */" >> $outputfile
			else
				echo -e "\t${array_have_checkbox[$i]} \t/*${array_menu_name[$i]} \t\t not have check box */" >> $outputfile
			fi
		fi
		let i++
	done

	echo "};" >> $outputfile
}

generate_haveSubMenu()
{
	echo "" >> $outputfile

	echo "static unsigned int haveSubMenu[] = {" >> $outputfile

	i=0
	while [ $i -lt ${#array_have_submenu[@]} ]
	do
		if [ $i -ne  $((${#array_have_submenu[@]} - 1)) ]; then
			if [ ${array_have_submenu[$i]} -eq 1 ]; then
				echo -e "\t${array_have_submenu[$i]}, \t/*${array_menu_name[$i]} \t\t have sub menu */" >> $outputfile
			else
				echo -e "\t${array_have_submenu[$i]}, \t/*${array_menu_name[$i]} \t\t not have sub menu */" >> $outputfile
			fi
		else
			if [ ${array_have_submenu[$i]} -eq 1 ]; then
				echo -e "\t${array_have_submenu[$i]} \t/*${array_menu_name[$i]} \t\t have sub menu */" >> $outputfile
			else
				echo -e "\t${array_have_submenu[$i]} \t/*${array_menu_name[$i]} \t\t not have sub menu */" >> $outputfile
			fi
		fi
		let i++
	done

	echo "};" >> $outputfile
}

generate_haveValueString()
{
	echo "" >> $outputfile

	echo "static unsigned int haveValueString[] = {" >> $outputfile

	i=0
	while [ $i -lt ${#array_menu_name[@]} ]
	do
		if [ $i -ne  $((${#array_menu_name[@]} - 1)) ]; then
			if [ ${array_have_value_string[$i]} -eq 1 ]; then
				echo -e "\t${array_have_value_string[$i]}, \t/*${array_menu_name[$i]} \t\t have value string */" >> $outputfile
			else
				echo -e "\t${array_have_value_string[$i]}, \t/*${array_menu_name[$i]} \t\t not have value string */" >> $outputfile
			fi
		else
			if [ ${array_have_submenu[$i]} -eq 1 ]; then
				echo -e "\t${array_have_value_string[$i]} \t/*${array_menu_name[$i]} \t\t have value string */" >> $outputfile
			else
				echo -e "\t${array_have_value_string[$i]} \t/*${array_menu_name[$i]} \t\t not have value string */" >> $outputfile
			fi
		fi
		let i++
	done

	echo "};" >> $outputfile


	echo "" >> $outputfile
}

generate_submenu_content0_cmd()
{
	echo "" >> $outputfile

	echo "static int subMenuContent0Cmd[] = {">> $outputfile

	i=0
	while [ $i -lt ${#array_have_submenu[@]} ]
	do
		if [ $i -ne  $((${#array_have_submenu[@]} - 1)) ]; then
			if [ ${array_have_submenu[$i]} -eq 1 ]; then
				echo -e "\tLANG_LABEL_SUBMENU_${array_menu_name[$i]}_CONTENT0," >> $outputfile
			else
				echo -e "\t-1, \t/*${array_menu_name[$i]} not have sub menu */" >> $outputfile
			fi
		else
			if [ ${array_have_submenu[$i]} -eq 1 ]; then
				echo -e " \tLANG_LABEL_SUBMENU_${array_menu_name[$i]}_CONTENT0" >> $outputfile
			else
				echo -e "\t-1 \t/*${array_menu_name[$i]} not have sub menu */" >> $outputfile
			fi
		fi
		let i++
	done

	echo "};" >> $outputfile
	echo "" >> $outputfile
}

generate_mlflags()
{
	echo "" >> $outputfile

	echo "static MLFlags mlFlags[] = {"	>> $outputfile
	echo "/***** 1. image flag	2. value flags	3. value counts *****************/" >> $outputfile

	i=0
	while [ $i -lt ${#array_menu_name[@]} ]
	do
		echo -e "\t/*${array_menu_name[$i]}*/"	>> $outputfile
		#if [ ${array_menu_name[$i]} == "FIRMWARE" ]; then 
		#	echo -e "\t{ IMGFLAG_IMAGE, {VMFLAG_STRING}, 1}," >> $outputfile
		#	let i++
		#	continue
		#fi
		if [ ${array_have_submenu[$i]} -eq 1 ]; then
				echo -e "\t{ IMGFLAG_IMAGE, {VMFLAG_STRING, VMFLAG_IMAGE}, 2}," >> $outputfile
		else
			if [ ${array_have_checkbox[$i]} -eq 1 ]; then
				echo -e "\t{ IMGFLAG_IMAGE, {VMFLAG_IMAGE}, 1}," >> $outputfile
			else 
				if [ ${array_have_value_string[$i]} -eq 1 ]; then
					echo -e "\t{ IMGFLAG_IMAGE, {VMFLAG_STRING}, 1}," >> $outputfile
				else
					echo -e "\t{ IMGFLAG_IMAGE, {0}, 0}," >> $outputfile
				fi
			fi
		fi
		echo "" >> $outputfile

		let i++
	done

	echo "};" >> $outputfile
	echo "" >> $outputfile
}


str=`grep -n -P '^\[menu\]' $inputfile`
if [ $? -eq 0 ]; then
	echo "find the menu section, line: $str"
else
	echo "not find [menu]"
	exit 1
fi


start_line=`echo $str | cut -d ":" -f 1`
echo "start_line is $start_line"

total_line=`wc -l $inputfile | cut -d " " -f 1`
echo "total lines is $total_line"

line=$((start_line + 1))
comment_line_cnt=0

count=0
while [ $line -le $total_line ]
do
	str=`sed -n ' '"$line"' p' $inputfile`
	#echo "line $line is $str"

	echo $str | grep -q -P "^$"
	if [ $? -eq 0 ]; then
		echo "ignore empty line: $line"
		let line++
		continue
	fi

	echo $str | grep -q -P "^#\w+,"
	if [ $? -eq 0 ]; then 
		str=${str#*#}	
		let comment_line_cnt++
	fi

	menulist_name=`echo $str | cut -d "," -f 1`
	#echo "menulist_name is $menulist_name"
	array_menu_name[$count]=$menulist_name

	echo $str | cut -d ',' -f 2 | grep -q "have sub menu"
	if [ $? -eq 0 ]; then
		array_have_submenu[$count]=1
	else
		array_have_submenu[$count]=0
	fi

	echo $str | cut -d ',' -f 3 | grep -q "have check box"
	if [ $? -eq 0 ]; then
		array_have_checkbox[$count]=1
	else
		array_have_checkbox[$count]=0
	fi

	echo $str | cut -d ',' -f 4 | grep -q "have value string"
	if [ $? -eq 0 ]; then
		array_have_value_string[$count]=1
	else
		array_have_value_string[$count]=0
	fi

	let line++
	let count++
done

i=0
while [ $i -lt ${#array_menu_name[@]} ]
do
#	echo "array_menu_name[$i] is ${array_menu_name[$i]}"
#	echo "array_have_submenu[$i] is ${array_have_submenu[$i]}"
#	echo "array_have_checkbox[$i] is ${array_have_checkbox[$i]}"
#	echo "array_have_value_string[$i] is ${array_have_value_string[$i]}"
	let i++
done

write_head

echo "comment lines is $comment_line_cnt"
number=${#array_menu_name[@]}
let number=number-comment_line_cnt
echo "#define MENU_LIST_COUNT  $number"	>> $outputfile

generate_menuIndex

generate_menuResourceID

generate_haveCheckBox

generate_haveSubMenu

generate_haveValueString

generate_submenu_content0_cmd

generate_mlflags

write_tail

exit 0
