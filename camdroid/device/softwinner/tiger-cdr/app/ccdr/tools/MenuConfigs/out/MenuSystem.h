
/*************************************************************************
 > File Name: MenuSystem.h
 > Description:
 > Description:
 >	Generated by script
 ************************************************************************/

#ifndef __MENUSYSTEM_H__
#define __MENUSYSTEM_H__

#include <minigui/common.h>
#include <minigui/minigui.h>
#include <minigui/gdi.h>
#include <minigui/window.h>
#include <minigui/control.h>

#include "windows.h"
#include "cdr_widgets.h"
#include "keyEvent.h"
#include "cdr_message.h"
#include "StorageManager.h"
#include "ResourceManager.h"

#define MENU_LIST_COUNT  17

enum menuIndex {
	MENU_INDEX_PARK,
	MENU_INDEX_GSENSOR,
	MENU_INDEX_RECORD_SOUND,
	MENU_INDEX_VOICEVOL,
	MENU_INDEX_KEYTONE,
	MENU_INDEX_LIGHT_FREQ,
	MENU_INDEX_TFCARD_INFO,
	MENU_INDEX_DELAY_SHUTDOWN,
	MENU_INDEX_FORMAT,
	MENU_INDEX_LANG,
	MENU_INDEX_DATE,
	MENU_INDEX_SS,
	MENU_INDEX_FIRMWARE,
	MENU_INDEX_STANDBY_MODE,
	MENU_INDEX_FRESET,
	MENU_INDEX_WIFI,
	MENU_INDEX_ALIGNLINE
};

static enum ResourceID menuResourceID[] = {
	ID_MENU_LIST_PARK,
	ID_MENU_LIST_GSENSOR,
	ID_MENU_LIST_RECORD_SOUND,
	ID_MENU_LIST_VOICEVOL,
	ID_MENU_LIST_KEYTONE,
	ID_MENU_LIST_LIGHT_FREQ,
	ID_MENU_LIST_TFCARD_INFO,
	ID_MENU_LIST_DELAY_SHUTDOWN,
	ID_MENU_LIST_FORMAT,
	ID_MENU_LIST_LANG,
	ID_MENU_LIST_DATE,
	ID_MENU_LIST_SS,
	ID_MENU_LIST_FIRMWARE,
	ID_MENU_LIST_STANDBY_MODE,
	ID_MENU_LIST_FRESET,
	ID_MENU_LIST_WIFI,
	ID_MENU_LIST_ALIGNLINE
};

static unsigned int haveCheckBox[] = {
	0, 	/*PARK 		 not have check box */
	0, 	/*GSENSOR 		 not have check box */
	1, 	/*RECORD_SOUND 		 have check box */
	0, 	/*VOICEVOL 		 not have check box */
	1, 	/*KEYTONE 		 have check box */
	0, 	/*LIGHT_FREQ 		 not have check box */
	0, 	/*TFCARD_INFO 		 not have check box */
	0, 	/*DELAY_SHUTDOWN 		 not have check box */
	0, 	/*FORMAT 		 not have check box */
	0, 	/*LANG 		 not have check box */
	0, 	/*DATE 		 not have check box */
	0, 	/*SS 		 not have check box */
	0, 	/*FIRMWARE 		 not have check box */
	1, 	/*STANDBY_MODE 		 have check box */
	0, 	/*FRESET 		 not have check box */
	1, 	/*WIFI 		 have check box */
	1 	/*ALIGNLINE 		 have check box */
};

static unsigned int haveSubMenu[] = {
	1, 	/*PARK 		 have sub menu */
	1, 	/*GSENSOR 		 have sub menu */
	0, 	/*RECORD_SOUND 		 not have sub menu */
	1, 	/*VOICEVOL 		 have sub menu */
	0, 	/*KEYTONE 		 not have sub menu */
	1, 	/*LIGHT_FREQ 		 have sub menu */
	0, 	/*TFCARD_INFO 		 not have sub menu */
	1, 	/*DELAY_SHUTDOWN 		 have sub menu */
	0, 	/*FORMAT 		 not have sub menu */
	1, 	/*LANG 		 have sub menu */
	0, 	/*DATE 		 not have sub menu */
	1, 	/*SS 		 have sub menu */
	0, 	/*FIRMWARE 		 not have sub menu */
	0, 	/*STANDBY_MODE 		 not have sub menu */
	0, 	/*FRESET 		 not have sub menu */
	0, 	/*WIFI 		 not have sub menu */
	0 	/*ALIGNLINE 		 not have sub menu */
};

static unsigned int haveValueString[] = {
	1, 	/*PARK 		 have value string */
	1, 	/*GSENSOR 		 have value string */
	0, 	/*RECORD_SOUND 		 not have value string */
	1, 	/*VOICEVOL 		 have value string */
	0, 	/*KEYTONE 		 not have value string */
	1, 	/*LIGHT_FREQ 		 have value string */
	0, 	/*TFCARD_INFO 		 not have value string */
	1, 	/*DELAY_SHUTDOWN 		 have value string */
	0, 	/*FORMAT 		 not have value string */
	1, 	/*LANG 		 have value string */
	0, 	/*DATE 		 not have value string */
	1, 	/*SS 		 have value string */
	1, 	/*FIRMWARE 		 have value string */
	0, 	/*STANDBY_MODE 		 not have value string */
	0, 	/*FRESET 		 not have value string */
	0, 	/*WIFI 		 not have value string */
	0 	/*ALIGNLINE 		 not have value string */
};


static int subMenuContent0Cmd[] = {
	LANG_LABEL_SUBMENU_PARK_CONTENT0,
	LANG_LABEL_SUBMENU_GSENSOR_CONTENT0,
	-1, 	/*RECORD_SOUND not have sub menu */
	LANG_LABEL_SUBMENU_VOICEVOL_CONTENT0,
	-1, 	/*KEYTONE not have sub menu */
	LANG_LABEL_SUBMENU_LIGHT_FREQ_CONTENT0,
	-1, 	/*TFCARD_INFO not have sub menu */
	LANG_LABEL_SUBMENU_DELAY_SHUTDOWN_CONTENT0,
	-1, 	/*FORMAT not have sub menu */
	LANG_LABEL_SUBMENU_LANG_CONTENT0,
	-1, 	/*DATE not have sub menu */
	LANG_LABEL_SUBMENU_SS_CONTENT0,
	-1, 	/*FIRMWARE not have sub menu */
	-1, 	/*STANDBY_MODE not have sub menu */
	-1, 	/*FRESET not have sub menu */
	-1, 	/*WIFI not have sub menu */
	-1 	/*ALIGNLINE not have sub menu */
};


static MLFlags mlFlags[] = {
/***** 1. image flag	2. value flags	3. value counts *****************/
	/*PARK*/
	{ IMGFLAG_IMAGE, {VMFLAG_STRING, VMFLAG_IMAGE}, 2},

	/*GSENSOR*/
	{ IMGFLAG_IMAGE, {VMFLAG_STRING, VMFLAG_IMAGE}, 2},

	/*RECORD_SOUND*/
	{ IMGFLAG_IMAGE, {VMFLAG_IMAGE}, 1},

	/*VOICEVOL*/
	{ IMGFLAG_IMAGE, {VMFLAG_STRING, VMFLAG_IMAGE}, 2},

	/*KEYTONE*/
	{ IMGFLAG_IMAGE, {VMFLAG_IMAGE}, 1},

	/*LIGHT_FREQ*/
	{ IMGFLAG_IMAGE, {VMFLAG_STRING, VMFLAG_IMAGE}, 2},

	/*TFCARD_INFO*/
	{ IMGFLAG_IMAGE, {0}, 0},

	/*DELAY_SHUTDOWN*/
	{ IMGFLAG_IMAGE, {VMFLAG_STRING, VMFLAG_IMAGE}, 2},

	/*FORMAT*/
	{ IMGFLAG_IMAGE, {0}, 0},

	/*LANG*/
	{ IMGFLAG_IMAGE, {VMFLAG_STRING, VMFLAG_IMAGE}, 2},

	/*DATE*/
	{ IMGFLAG_IMAGE, {0}, 0},

	/*SS*/
	{ IMGFLAG_IMAGE, {VMFLAG_STRING, VMFLAG_IMAGE}, 2},

	/*FIRMWARE*/
	{ IMGFLAG_IMAGE, {VMFLAG_STRING}, 1},

	/*STANDBY_MODE*/
	{ IMGFLAG_IMAGE, {VMFLAG_IMAGE}, 1},

	/*FRESET*/
	{ IMGFLAG_IMAGE, {0}, 0},

	/*WIFI*/
	{ IMGFLAG_IMAGE, {VMFLAG_IMAGE}, 1},

	/*ALIGNLINE*/
	{ IMGFLAG_IMAGE, {VMFLAG_IMAGE}, 1},

};


#endif

